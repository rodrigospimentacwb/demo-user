{
	"info": {
		"_postman_id": "6b7f470e-b6bd-47f4-9c7f-02e38725d304",
		"name": "project-users",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17130971"
	},
	"item": [
		{
			"name": "signin",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if (pm.response.code === 200) {",
							"    // Extrai o token do corpo da resposta",
							"    var responseBody = pm.response.json();",
							"    var token = responseBody.token;",
							"    ",
							"    // Define a variável de ambiente \"token\" com o valor extraído",
							"    pm.environment.set(\"token\", token);",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{   \n    \"email\" : \"user1@example.com\",\n    \"password\": \"pass123456\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/auth/signin",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth",
						"signin"
					]
				}
			},
			"response": [
				{
					"name": "200",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"user1@example.com\",\n    \"password\": \"pass123456\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/signin",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"signin"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "0"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Date",
							"value": "Thu, 30 May 2024 14:03:37 GMT"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=60"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1c2VyMUBleGFtcGxlLmNvbSIsImlhdCI6MTcxNzA3NzgxNywiZXhwIjoxNzE3MDgxNDE3fQ.yAkw495GS3vSNWhX8K1xN6c56CPEWDDmrfncGdSFGU0\",\n    \"expiresIn\": 3600000\n}"
				},
				{
					"name": "401",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"\",\n    \"password\": \"pass123456\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/signin",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"signin"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "0"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Content-Type",
							"value": "application/problem+json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Date",
							"value": "Thu, 30 May 2024 14:03:56 GMT"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=60"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "{\n    \"type\": \"about:blank\",\n    \"title\": \"Unauthorized\",\n    \"status\": 401,\n    \"detail\": \"Bad credentials\",\n    \"instance\": \"/auth/signin\",\n    \"description\": \"The username or password is incorrect\"\n}"
				},
				{
					"name": "500",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/signin",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"signin"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "0"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Content-Type",
							"value": "application/problem+json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Date",
							"value": "Thu, 30 May 2024 14:04:18 GMT"
						},
						{
							"key": "Connection",
							"value": "close"
						}
					],
					"cookie": [],
					"body": "{\n    \"type\": \"about:blank\",\n    \"title\": \"Internal Server Error\",\n    \"status\": 500,\n    \"detail\": \"Required request body is missing: public org.springframework.http.ResponseEntity<br.com.pepper.demouser.domains.auth.controllers.dtos.LoginResponse> br.com.pepper.demouser.domains.auth.controllers.AuthController.authenticate(br.com.pepper.demouser.domains.auth.controllers.dtos.SignInDto)\",\n    \"instance\": \"/auth/signin\",\n    \"description\": \"Unknown internal server error.\"\n}"
				},
				{
					"name": "400",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{   \n    \"email\" : \"user test 1\",\n    \"password\": \"pass123456\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/signin",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"signin"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "0"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Content-Type",
							"value": "application/problem+json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Date",
							"value": "Thu, 30 May 2024 22:06:13 GMT"
						},
						{
							"key": "Connection",
							"value": "close"
						}
					],
					"cookie": [],
					"body": "{\n    \"type\": \"about:blank\",\n    \"title\": \"Bad Request\",\n    \"status\": 400,\n    \"instance\": \"/auth/signin\",\n    \"fieldErrors\": {\n        \"email\": \"The provided email address is invalid\"\n    },\n    \"description\": \"One or more fields have an error\"\n}"
				}
			]
		},
		{
			"name": "signup",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\" : \"user test 1\",\n    \"email\": \"user1@example.com\",\n    \"password\": \"pass123456\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/auth/signup",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth",
						"signup"
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": [
				{
					"name": "200",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\" : \"user test 1\",\n    \"email\": \"user1@example.com\",\n    \"password\": \"pass123456\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/signup",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"signup"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "0"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Date",
							"value": "Sat, 01 Jun 2024 03:58:52 GMT"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=60"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 1,\n    \"name\": \"user test 1\",\n    \"email\": \"user1@example.com\"\n}"
				},
				{
					"name": "409",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\" : \"user test 1\",\n    \"email\": \"user1@example.com\",\n    \"password\": \"pass123456\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/signup",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"signup"
							]
						}
					},
					"status": "Conflict",
					"code": 409,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "0"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Content-Type",
							"value": "application/problem+json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Date",
							"value": "Sat, 01 Jun 2024 03:58:59 GMT"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=60"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "{\n    \"type\": \"about:blank\",\n    \"title\": \"Conflict\",\n    \"status\": 409,\n    \"instance\": \"/auth/signup\",\n    \"description\": \"Failed to save new user\",\n    \"timestamp\": \"2024-06-01T00:58:59.174545520\"\n}"
				}
			]
		},
		{
			"name": "list users",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/users?page=0&size=10&sortField=name&sortDirection=asc&name=test",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "10"
						},
						{
							"key": "sortField",
							"value": "name"
						},
						{
							"key": "sortDirection",
							"value": "asc"
						},
						{
							"key": "name",
							"value": "test"
						}
					]
				}
			},
			"response": [
				{
					"name": "200 without name",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users?page=0&size=10&name=example",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								},
								{
									"key": "name",
									"value": "example"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "0"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Date",
							"value": "Fri, 31 May 2024 00:14:59 GMT"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=60"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "{\n    \"totalPages\": 1,\n    \"totalElements\": 5,\n    \"pageable\": {\n        \"pageNumber\": 0,\n        \"pageSize\": 10,\n        \"sort\": {\n            \"sorted\": false,\n            \"empty\": true,\n            \"unsorted\": true\n        },\n        \"offset\": 0,\n        \"paged\": true,\n        \"unpaged\": false\n    },\n    \"first\": true,\n    \"last\": true,\n    \"size\": 10,\n    \"content\": [\n        {\n            \"id\": 1,\n            \"name\": \"user test 1\",\n            \"email\": \"user1@example.com\"\n        },\n        {\n            \"id\": 2,\n            \"name\": \"user test 4\",\n            \"email\": \"user4@example.com\"\n        },\n        {\n            \"id\": 3,\n            \"name\": \"user test 2\",\n            \"email\": \"user2@example.com\"\n        },\n        {\n            \"id\": 4,\n            \"name\": \"user test 3\",\n            \"email\": \"user3@example.com\"\n        },\n        {\n            \"id\": 5,\n            \"name\": \"user test 5\",\n            \"email\": \"user5@example.com\"\n        }\n    ],\n    \"number\": 0,\n    \"sort\": {\n        \"sorted\": false,\n        \"empty\": true,\n        \"unsorted\": true\n    },\n    \"numberOfElements\": 5,\n    \"empty\": false\n}"
				},
				{
					"name": "200 with name",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users?page=0&size=10&name=1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								},
								{
									"key": "name",
									"value": "1"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "0"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Date",
							"value": "Fri, 31 May 2024 00:15:32 GMT"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=60"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "{\n    \"totalPages\": 1,\n    \"totalElements\": 1,\n    \"pageable\": {\n        \"pageNumber\": 0,\n        \"pageSize\": 10,\n        \"sort\": {\n            \"sorted\": false,\n            \"empty\": true,\n            \"unsorted\": true\n        },\n        \"offset\": 0,\n        \"paged\": true,\n        \"unpaged\": false\n    },\n    \"first\": true,\n    \"last\": true,\n    \"size\": 10,\n    \"content\": [\n        {\n            \"id\": 1,\n            \"name\": \"user test 1\",\n            \"email\": \"user1@example.com\"\n        }\n    ],\n    \"number\": 0,\n    \"sort\": {\n        \"sorted\": false,\n        \"empty\": true,\n        \"unsorted\": true\n    },\n    \"numberOfElements\": 1,\n    \"empty\": false\n}"
				}
			]
		},
		{
			"name": "get by id",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/users/5",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users",
						"5"
					]
				}
			},
			"response": []
		}
	]
}